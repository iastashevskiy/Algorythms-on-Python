# 5. В массиве найти максимальный отрицательный элемент. Вывести на экран его 
# значение и позицию в массиве.
# Python 3.6, Win 32-bit
# Третий вариант программы (заведомо не самый лучший): создается вспомогательный список,
# положительные члены удаляются методом list.remove()

def show_size(x, level=0):
	total_size = 0
	for i in x:
		total_size += sys.getsizeof(x[i])
		if hasattr(i, '__iter__'):
			if hasattr(i, 'items'):
				for key, value in i.items():
					show_size(key, level + 1)
					show_size(value, level + 1)
			elif not isinstance(i, str):
				for item in i:
					show_size(item, level + 1)
	return total_size

import random
import sys


LENGTH = 10
START = -100
STOP = 100

lst = [random.randint(START, STOP) for _ in range (0,LENGTH)]
print(lst)

dumb = lst.copy()
for i in lst:
	# print(sys.getsizeof(dumb))
	if i >= 0:
		dumb.remove(i)

dumb.sort()
dumb.reverse()

position = lst.index(dumb[0])


print('Максимальный отрицательный элемент имеет индекс ', position, ' и равен ', dumb[0])

global_variables = globals()


print('Использовано памяти: ', show_size(global_variables))

# Вывод:
# В ходе домашнего задания было написано три варианта решения одной и той же задачи.
# В ходе выполнения алгоритма первый методзанимает немного меньше пямати в связи с тем,
# что в этом методе не создается вспомогательного списка. Второй и третий метод при этом
# занимают практически одинаковое количество памяти. По завершении работы алгоритмов 
# остается занято константное количество памяти. Различия в используемой памяти 
# замечаются только во время работы цикла. При этом различные методы редактирования
# списка используют примерно одинаковое количество памяти, несмотря на разницу в 
# быстродействии.
# По результатам можно сказать, что выбор данной задачи для оценки памяти неудачен,
# так как создается небольшое, мало различающееся количество переменных. Оценка этих 
# методов дала бы гораздо более показательный результат в случае анализа быстродействия
# (где были использованы другие выполненные задачи).


# Выбор других задач был бы более оправдан (либо я что-то делаю неправильно)

